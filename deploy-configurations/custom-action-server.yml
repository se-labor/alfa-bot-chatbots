affinity: {}
applicationSettings:
  port: 5055
  scheme: http
args: []
autoscaling:
  enabled: false
  maxReplicas: 20
  minReplicas: 1
  targetCPUUtilizationPercentage: 80
command: []
deploymentAnnotations: {}
deploymentLabels: {}
extraEnv:
  - name: DOMAIN
    value: smtp.variomedia.de
  - name: PORT1
    value: '25'
  - name: PORT2
    value: '587'
  - name: FROM
    value: alfabot-survey@se-labor.de
  - name: TOFH
    value: simon.proost@fh-muenster.de
  - name: TOBVAG
    value: r.haeder@alphabetisierung.de
  - name: USERNAME
    value: alfabot-survey@se-labor.de
  - name: CREDENTIAL
    value: xMXLlQ.7m)P+]CKy
fullnameOverride: ''
image:
  name: sjproost/alfabot-ca
  pullPolicy: IfNotPresent
  pullSecrets: []
  repository: ''
  tag: 3.0.0
ingress:
  annotations: {}
  enabled: true
  extraPaths: {}
  hostname: alfaca.se-labor.de
  labels: {}
  path: /webhook
  pathType: ImplementationSpecific
  tls:
    - hosts:
        - alfaca.se-labor.de
      secretName: alfaca-se-labor-de-tls
initContainers: []
livenessProbe:
  failureThreshold: 6
  httpGet:
    path: /health
    port: http
    scheme: HTTP
  initialDelaySeconds: 15
  periodSeconds: 15
  successThreshold: 1
  timeoutSeconds: 5
nameOverride: ''
nodeSelector: {}
podAnnotations: {}
podLabels: {}
podSecurityContext: {}
readinessProbe:
  failureThreshold: 6
  httpGet:
    path: /health
    port: http
    scheme: HTTP
  initialDelaySeconds: 15
  periodSeconds: 15
  successThreshold: 1
  timeoutSeconds: 5
registry: docker.io
replicaCount: 1
resources: {}
securityContext: {}
service:
  annotations: {}
  externalTrafficPolicy: Cluster
  loadBalancerIP: null
  nodePort: null
  port: 80
  type: ClusterIP
serviceAccount:
  annotations: {}
  create: false
  name: ''
strategy:
  rollingUpdate:
    maxSurge: 1
    maxUnavailable: 0
  type: RollingUpdate
tolerations: []
volumeMounts: []
volumes: []
global:
  cattle:
    systemProjectId: ''
